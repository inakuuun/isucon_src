server {
  listen 80 default_server;
  server_name _;
  index index.html index.htm index.nginx-debian.html;
  root /var/www/html;
  location / {
    try_files $uri $uri/ =404;
  }
}

server {
  listen 443 ssl default_server;
  server_name _;
  index index.html index.htm index.nginx-debian.html;
  root /var/www/html;

  # bot避けのためのvhostで、この証明書は有効期限がきれています
  ssl_certificate     /etc/nginx/tls/_.t.isucon.dev.crt;
  ssl_certificate_key /etc/nginx/tls/_.t.isucon.dev.key;
  ssl_protocols TLSv1.3;
  ssl_prefer_server_ciphers off;

  location / {
    try_files $uri $uri/ =404;
  }
}

server {
  listen 443 ssl;
  server_name u.isucon.local;
  server_name *.u.isucon.local;

  ssl_certificate     /etc/nginx/tls/_.u.isucon.local.crt;
  ssl_certificate_key /etc/nginx/tls/_.u.isucon.local.key;

  ssl_protocols TLSv1.3;
  ssl_prefer_server_ciphers off;

  client_max_body_size 10m;
  root /home/isucon/webapp/public/;

  # user_handler.goからiconファイルの取得をnginxに任せないように修正したことにより以下の処理が不要となるがコメントアウトで残しておく
  # remove start 2024/12/07
  # location /icons {
  #   # 参考記事 => https://heartbeats.jp/hbblog/2012/04/nginx05.html
  #   # internalを設定することで外部からの直接的なアクセスを遮断することができる
  #   # 内部からのリクエストのためのみに使用する時に設定
  #   internal;
  #   # expiresでキャッシュの有効期限を設定 => 1d = 1日
  #   expires 1d;
  #   # URIのパスとファイルシステム上のパスを紐づける
  #   alias /home/isucon/webapp/public/icons;
  #   # try_filesにより$uriで指定している静的コンテンツ(ファイルやディレクトリ)が存在しない場合に/noimageにリダイレクト
  #   try_files $uri /noimage;
  # }

  # location /noimage {
  #   expires 1d;
  #   # default_typeでレスポンスのデフォルトのMIMEタイプを設定する
  #   # 参考記事 => https://heartbeats.jp/hbblog/2012/02/nginx03.html
  #   default_type image/jpeg;
  #   alias /home/isucon/webapp/img/NoImage.jpg;
  # }
  # remove end 2024/12/07

  location / {
    try_files $uri /index.html;
  }
  location /api {
    proxy_set_header Host $host;
    proxy_pass http://localhost:8080;
  }
}